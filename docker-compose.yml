version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: /bin/sh -c 'uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 --reload --log-level "$(echo "${APP_LOG_LEVEL:-INFO}" | tr "[:upper:]" "[:lower:]")"'
    env_file:
      - .env
    environment:
      APP_LOG_LEVEL: ${APP_LOG_LEVEL:-INFO}
      COURSES_PATH: /app/docs/data/courses.json
      SQLITE_PATH: /app/data/courses.db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      - sqlite
      - redis

  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: /bin/sh -c 'celery -A backend.app.celery_app.celery_app worker --queues courses --loglevel "$(echo "${APP_LOG_LEVEL:-INFO}" | tr "[:upper:]" "[:lower:]")"'
    env_file:
      - .env
    environment:
      APP_LOG_LEVEL: ${APP_LOG_LEVEL:-INFO}
      COURSES_PATH: /app/docs/data/courses.json
      SQLITE_PATH: /app/data/courses.db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./:/app
    depends_on:
      - sqlite
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    command: npm run dev
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend-node_modules:/app/node_modules
      - frontend-next-cache:/app/.next
    ports:
      - "8080:3000"
    environment:
      NEXT_PUBLIC_API_BASE: /api
      API_PROXY_TARGET: http://backend:8000
      CHOKIDAR_USEPOLLING: "1"
      WATCHPACK_POLLING: "true"
    depends_on:
      - sqlite
      - backend
    tty: true
    stdin_open: true

  # GitHub Pages preview server
  github-pages:
    image: nginx:1.27-alpine
    volumes:
      - ./docs:/usr/share/nginx/html:ro
      - ./nginx-github-pages.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "3000:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  sqlite:
    platform: linux/amd64
    image: nouchka/sqlite3:latest
    entrypoint: ["/bin/sh", "-c", "tail -f /dev/null"]
    volumes:
      - ./data:/data
    restart: unless-stopped


volumes:
  frontend-node_modules:
  frontend-next-cache:
